//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Discoverx.Models.CBIS_DB
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;

    public partial class DiscoveRx_OrdersEntities : DbContext
    {
        public DiscoveRx_OrdersEntities()
            : base("name=DiscoveRx_OrdersEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Order> Orders { get; set; }
    
        public virtual ObjectResult<DX_GetAssayReportSummary_Result> DX_GetAssayReportSummary(string projectID)
        {
            var projectIDParameter = projectID != null ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DX_GetAssayReportSummary_Result>("DX_GetAssayReportSummary", projectIDParameter);
        }
    
        public virtual ObjectResult<DX_GetPrimaryAssayData_Result> DX_GetPrimaryAssayData(string projectid)
        {
            var projectidParameter = projectid != null ?
                new ObjectParameter("projectid", projectid) :
                new ObjectParameter("projectid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DX_GetPrimaryAssayData_Result>("DX_GetPrimaryAssayData", projectidParameter);
        }
    
        public virtual ObjectResult<DX_GetPrimaryPlateControl_Result> DX_GetPrimaryPlateControl(string projectID)
        {
            var projectIDParameter = projectID != null ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DX_GetPrimaryPlateControl_Result>("DX_GetPrimaryPlateControl", projectIDParameter);
        }
    
        public virtual ObjectResult<DX_GetSecondaryAssayGraphData_Result> DX_GetSecondaryAssayGraphData(string projectID, string componentName, string assayTarget)
        {
            var projectIDParameter = projectID != null ?
                new ObjectParameter("projectID", projectID) :
                new ObjectParameter("projectID", typeof(string));
    
            var componentNameParameter = componentName != null ?
                new ObjectParameter("componentName", componentName) :
                new ObjectParameter("componentName", typeof(string));
    
            var assayTargetParameter = assayTarget != null ?
                new ObjectParameter("assayTarget", assayTarget) :
                new ObjectParameter("assayTarget", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DX_GetSecondaryAssayGraphData_Result>("DX_GetSecondaryAssayGraphData", projectIDParameter, componentNameParameter, assayTargetParameter);
        }
    }
}
